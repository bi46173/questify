### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AggregateForm {
  _avg: FormAvgAggregateOutputType
  _count: FormCountAggregateOutputType
  _max: FormMaxAggregateOutputType
  _min: FormMinAggregateOutputType
  _sum: FormSumAggregateOutputType
}

type AggregateFormItem {
  _avg: FormItemAvgAggregateOutputType
  _count: FormItemCountAggregateOutputType
  _max: FormItemMaxAggregateOutputType
  _min: FormItemMinAggregateOutputType
  _sum: FormItemSumAggregateOutputType
}

type BatchPayload {
  count: Int!
}

"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
@see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt
"""
scalar BigInt

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

input BoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input BoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

"""The `Byte` scalar type represents byte value as a Buffer"""
scalar Bytes

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input DateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime]
}

"""An arbitrary-precision Decimal type"""
scalar Decimal

input EnumFormTypeFieldUpdateOperationsInput {
  set: FormType
}

input EnumFormTypeFilter {
  equals: FormType
  in: [FormType]
  not: NestedEnumFormTypeFilter
  notIn: [FormType]
}

input EnumFormTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumFormTypeFilter
  _min: NestedEnumFormTypeFilter
  equals: FormType
  in: [FormType]
  not: NestedEnumFormTypeWithAggregatesFilter
  notIn: [FormType]
}

type Form {
  _count: FormCountOutputType!
  createdAt: DateTime!
  favorite: Boolean!
  id: String!
  items(cursor: FormItemWhereUniqueInput, distinct: [FormItemScalarFieldEnum], orderBy: [FormItemOrderByWithRelationInput], skip: Int, take: Int, where: FormItemWhereInput): [FormItem!]!
  name: String!
  order: Int!
  ownerId: String!
  style: Json
  updatedAt: DateTime!
}

type FormAvgAggregateOutputType {
  order: Float
}

input FormAvgOrderByAggregateInput {
  order: SortOrder
}

type FormCountAggregateOutputType {
  _all: Int!
  createdAt: Int!
  favorite: Int!
  id: Int!
  name: Int!
  order: Int!
  ownerId: Int!
  style: Int!
  updatedAt: Int!
}

input FormCountOrderByAggregateInput {
  createdAt: SortOrder
  favorite: SortOrder
  id: SortOrder
  name: SortOrder
  order: SortOrder
  ownerId: SortOrder
  style: SortOrder
  updatedAt: SortOrder
}

type FormCountOutputType {
  items: Int!
}

input FormCreateInput {
  createdAt: DateTime
  favorite: Boolean
  id: String
  items: FormItemCreateNestedManyWithoutFormInput
  name: String!
  order: Int
  ownerId: String!
  style: Json
  updatedAt: DateTime
}

input FormCreateManyInput {
  createdAt: DateTime
  favorite: Boolean
  id: String
  name: String!
  order: Int
  ownerId: String!
  style: Json
  updatedAt: DateTime
}

input FormCreateNestedOneWithoutItemsInput {
  connect: FormWhereUniqueInput
  connectOrCreate: FormCreateOrConnectWithoutItemsInput
  create: FormCreateWithoutItemsInput
}

input FormCreateOrConnectWithoutItemsInput {
  create: FormCreateWithoutItemsInput!
  where: FormWhereUniqueInput!
}

input FormCreateWithoutItemsInput {
  createdAt: DateTime
  favorite: Boolean
  id: String
  name: String!
  order: Int
  ownerId: String!
  style: Json
  updatedAt: DateTime
}

type FormItem {
  Form: Form!
  formId: String!
  id: String!
  image: Json
  items: Json
  name: String!
  order: Int!
  required: Boolean!
  section: Int!
  type: FormType!
}

type FormItemAvgAggregateOutputType {
  order: Float
  section: Float
}

input FormItemAvgOrderByAggregateInput {
  order: SortOrder
  section: SortOrder
}

type FormItemCountAggregateOutputType {
  _all: Int!
  formId: Int!
  id: Int!
  image: Int!
  items: Int!
  name: Int!
  order: Int!
  required: Int!
  section: Int!
  type: Int!
}

input FormItemCountOrderByAggregateInput {
  formId: SortOrder
  id: SortOrder
  image: SortOrder
  items: SortOrder
  name: SortOrder
  order: SortOrder
  required: SortOrder
  section: SortOrder
  type: SortOrder
}

input FormItemCreateInput {
  Form: FormCreateNestedOneWithoutItemsInput!
  id: String
  image: Json
  items: Json
  name: String!
  order: Int
  required: Boolean
  section: Int
  type: FormType!
}

input FormItemCreateManyFormInput {
  id: String
  image: Json
  items: Json
  name: String!
  order: Int
  required: Boolean
  section: Int
  type: FormType!
}

input FormItemCreateManyFormInputEnvelope {
  data: FormItemCreateManyFormInput!
  skipDuplicates: Boolean
}

input FormItemCreateManyInput {
  formId: String!
  id: String
  image: Json
  items: Json
  name: String!
  order: Int
  required: Boolean
  section: Int
  type: FormType!
}

input FormItemCreateNestedManyWithoutFormInput {
  connect: [FormItemWhereUniqueInput]
  connectOrCreate: [FormItemCreateOrConnectWithoutFormInput]
  create: [FormItemCreateWithoutFormInput]
  createMany: FormItemCreateManyFormInputEnvelope
}

input FormItemCreateOrConnectWithoutFormInput {
  create: FormItemCreateWithoutFormInput!
  where: FormItemWhereUniqueInput!
}

input FormItemCreateWithoutFormInput {
  id: String
  image: Json
  items: Json
  name: String!
  order: Int
  required: Boolean
  section: Int
  type: FormType!
}

input FormItemListRelationFilter {
  every: FormItemWhereInput
  none: FormItemWhereInput
  some: FormItemWhereInput
}

type FormItemMaxAggregateOutputType {
  formId: String
  id: String
  name: String
  order: Int
  required: Boolean
  section: Int
  type: FormType
}

input FormItemMaxOrderByAggregateInput {
  formId: SortOrder
  id: SortOrder
  name: SortOrder
  order: SortOrder
  required: SortOrder
  section: SortOrder
  type: SortOrder
}

type FormItemMinAggregateOutputType {
  formId: String
  id: String
  name: String
  order: Int
  required: Boolean
  section: Int
  type: FormType
}

input FormItemMinOrderByAggregateInput {
  formId: SortOrder
  id: SortOrder
  name: SortOrder
  order: SortOrder
  required: SortOrder
  section: SortOrder
  type: SortOrder
}

input FormItemOrderByRelationAggregateInput {
  _count: SortOrder
}

input FormItemOrderByWithAggregationInput {
  _avg: FormItemAvgOrderByAggregateInput
  _count: FormItemCountOrderByAggregateInput
  _max: FormItemMaxOrderByAggregateInput
  _min: FormItemMinOrderByAggregateInput
  _sum: FormItemSumOrderByAggregateInput
  formId: SortOrder
  id: SortOrder
  image: SortOrderInput
  items: SortOrderInput
  name: SortOrder
  order: SortOrder
  required: SortOrder
  section: SortOrder
  type: SortOrder
}

input FormItemOrderByWithRelationInput {
  Form: FormOrderByWithRelationInput
  formId: SortOrder
  id: SortOrder
  image: SortOrderInput
  items: SortOrderInput
  name: SortOrder
  order: SortOrder
  required: SortOrder
  section: SortOrder
  type: SortOrder
}

enum FormItemScalarFieldEnum {
  formId
  id
  image
  items
  name
  order
  required
  section
  type
}

input FormItemScalarWhereInput {
  AND: [FormItemScalarWhereInput]
  NOT: [FormItemScalarWhereInput]
  OR: [FormItemScalarWhereInput]
  formId: StringFilter
  id: StringFilter
  image: JsonNullableFilter
  items: JsonNullableFilter
  name: StringFilter
  order: IntFilter
  required: BoolFilter
  section: IntFilter
  type: EnumFormTypeFilter
}

input FormItemScalarWhereWithAggregatesInput {
  AND: [FormItemScalarWhereWithAggregatesInput]
  NOT: [FormItemScalarWhereWithAggregatesInput]
  OR: [FormItemScalarWhereWithAggregatesInput]
  formId: StringWithAggregatesFilter
  id: StringWithAggregatesFilter
  image: JsonNullableWithAggregatesFilter
  items: JsonNullableWithAggregatesFilter
  name: StringWithAggregatesFilter
  order: IntWithAggregatesFilter
  required: BoolWithAggregatesFilter
  section: IntWithAggregatesFilter
  type: EnumFormTypeWithAggregatesFilter
}

type FormItemSumAggregateOutputType {
  order: Int
  section: Int
}

input FormItemSumOrderByAggregateInput {
  order: SortOrder
  section: SortOrder
}

input FormItemUncheckedCreateInput {
  formId: String!
  id: String
  image: Json
  items: Json
  name: String!
  order: Int
  required: Boolean
  section: Int
  type: FormType!
}

input FormItemUncheckedCreateNestedManyWithoutFormInput {
  connect: [FormItemWhereUniqueInput]
  connectOrCreate: [FormItemCreateOrConnectWithoutFormInput]
  create: [FormItemCreateWithoutFormInput]
  createMany: FormItemCreateManyFormInputEnvelope
}

input FormItemUncheckedCreateWithoutFormInput {
  id: String
  image: Json
  items: Json
  name: String!
  order: Int
  required: Boolean
  section: Int
  type: FormType!
}

input FormItemUncheckedUpdateInput {
  formId: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: Json
  items: Json
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  section: IntFieldUpdateOperationsInput
  type: EnumFormTypeFieldUpdateOperationsInput
}

input FormItemUncheckedUpdateManyInput {
  formId: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: Json
  items: Json
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  section: IntFieldUpdateOperationsInput
  type: EnumFormTypeFieldUpdateOperationsInput
}

input FormItemUncheckedUpdateManyWithoutFormInput {
  id: StringFieldUpdateOperationsInput
  image: Json
  items: Json
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  section: IntFieldUpdateOperationsInput
  type: EnumFormTypeFieldUpdateOperationsInput
}

input FormItemUncheckedUpdateManyWithoutFormNestedInput {
  connect: [FormItemWhereUniqueInput]
  connectOrCreate: [FormItemCreateOrConnectWithoutFormInput]
  create: [FormItemCreateWithoutFormInput]
  createMany: FormItemCreateManyFormInputEnvelope
  delete: [FormItemWhereUniqueInput]
  deleteMany: [FormItemScalarWhereInput]
  disconnect: [FormItemWhereUniqueInput]
  set: [FormItemWhereUniqueInput]
  update: [FormItemUpdateWithWhereUniqueWithoutFormInput]
  updateMany: [FormItemUpdateManyWithWhereWithoutFormInput]
  upsert: [FormItemUpsertWithWhereUniqueWithoutFormInput]
}

input FormItemUncheckedUpdateWithoutFormInput {
  id: StringFieldUpdateOperationsInput
  image: Json
  items: Json
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  section: IntFieldUpdateOperationsInput
  type: EnumFormTypeFieldUpdateOperationsInput
}

input FormItemUpdateInput {
  Form: FormUpdateOneRequiredWithoutItemsNestedInput
  id: StringFieldUpdateOperationsInput
  image: Json
  items: Json
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  section: IntFieldUpdateOperationsInput
  type: EnumFormTypeFieldUpdateOperationsInput
}

input FormItemUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  image: Json
  items: Json
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  section: IntFieldUpdateOperationsInput
  type: EnumFormTypeFieldUpdateOperationsInput
}

input FormItemUpdateManyWithWhereWithoutFormInput {
  data: FormItemUpdateManyMutationInput!
  where: FormItemScalarWhereInput!
}

input FormItemUpdateManyWithoutFormNestedInput {
  connect: [FormItemWhereUniqueInput]
  connectOrCreate: [FormItemCreateOrConnectWithoutFormInput]
  create: [FormItemCreateWithoutFormInput]
  createMany: FormItemCreateManyFormInputEnvelope
  delete: [FormItemWhereUniqueInput]
  deleteMany: [FormItemScalarWhereInput]
  disconnect: [FormItemWhereUniqueInput]
  set: [FormItemWhereUniqueInput]
  update: [FormItemUpdateWithWhereUniqueWithoutFormInput]
  updateMany: [FormItemUpdateManyWithWhereWithoutFormInput]
  upsert: [FormItemUpsertWithWhereUniqueWithoutFormInput]
}

input FormItemUpdateWithWhereUniqueWithoutFormInput {
  data: FormItemUpdateWithoutFormInput!
  where: FormItemWhereUniqueInput!
}

input FormItemUpdateWithoutFormInput {
  id: StringFieldUpdateOperationsInput
  image: Json
  items: Json
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  required: BoolFieldUpdateOperationsInput
  section: IntFieldUpdateOperationsInput
  type: EnumFormTypeFieldUpdateOperationsInput
}

input FormItemUpsertWithWhereUniqueWithoutFormInput {
  create: FormItemCreateWithoutFormInput!
  update: FormItemUpdateWithoutFormInput!
  where: FormItemWhereUniqueInput!
}

input FormItemWhereInput {
  AND: [FormItemWhereInput]
  Form: FormRelationFilter
  NOT: [FormItemWhereInput]
  OR: [FormItemWhereInput]
  formId: StringFilter
  id: StringFilter
  image: JsonNullableFilter
  items: JsonNullableFilter
  name: StringFilter
  order: IntFilter
  required: BoolFilter
  section: IntFilter
  type: EnumFormTypeFilter
}

input FormItemWhereUniqueInput {
  AND: [FormItemWhereInput]
  Form: FormRelationFilter
  NOT: [FormItemWhereInput]
  OR: [FormItemWhereInput]
  formId: StringFilter
  id: String
  image: JsonNullableFilter
  items: JsonNullableFilter
  name: StringFilter
  order: IntFilter
  required: BoolFilter
  section: IntFilter
  type: EnumFormTypeFilter
}

type FormMaxAggregateOutputType {
  createdAt: DateTime
  favorite: Boolean
  id: String
  name: String
  order: Int
  ownerId: String
  updatedAt: DateTime
}

input FormMaxOrderByAggregateInput {
  createdAt: SortOrder
  favorite: SortOrder
  id: SortOrder
  name: SortOrder
  order: SortOrder
  ownerId: SortOrder
  updatedAt: SortOrder
}

type FormMinAggregateOutputType {
  createdAt: DateTime
  favorite: Boolean
  id: String
  name: String
  order: Int
  ownerId: String
  updatedAt: DateTime
}

input FormMinOrderByAggregateInput {
  createdAt: SortOrder
  favorite: SortOrder
  id: SortOrder
  name: SortOrder
  order: SortOrder
  ownerId: SortOrder
  updatedAt: SortOrder
}

input FormOrderByWithAggregationInput {
  _avg: FormAvgOrderByAggregateInput
  _count: FormCountOrderByAggregateInput
  _max: FormMaxOrderByAggregateInput
  _min: FormMinOrderByAggregateInput
  _sum: FormSumOrderByAggregateInput
  createdAt: SortOrder
  favorite: SortOrder
  id: SortOrder
  name: SortOrder
  order: SortOrder
  ownerId: SortOrder
  style: SortOrderInput
  updatedAt: SortOrder
}

input FormOrderByWithRelationInput {
  createdAt: SortOrder
  favorite: SortOrder
  id: SortOrder
  items: FormItemOrderByRelationAggregateInput
  name: SortOrder
  order: SortOrder
  ownerId: SortOrder
  style: SortOrderInput
  updatedAt: SortOrder
}

input FormOwnerIdNameCompoundUniqueInput {
  name: String!
  ownerId: String!
}

input FormRelationFilter {
  is: FormWhereInput
  isNot: FormWhereInput
}

enum FormScalarFieldEnum {
  createdAt
  favorite
  id
  name
  order
  ownerId
  style
  updatedAt
}

input FormScalarWhereWithAggregatesInput {
  AND: [FormScalarWhereWithAggregatesInput]
  NOT: [FormScalarWhereWithAggregatesInput]
  OR: [FormScalarWhereWithAggregatesInput]
  createdAt: DateTimeWithAggregatesFilter
  favorite: BoolWithAggregatesFilter
  id: StringWithAggregatesFilter
  name: StringWithAggregatesFilter
  order: IntWithAggregatesFilter
  ownerId: StringWithAggregatesFilter
  style: JsonNullableWithAggregatesFilter
  updatedAt: DateTimeWithAggregatesFilter
}

type FormSumAggregateOutputType {
  order: Int
}

input FormSumOrderByAggregateInput {
  order: SortOrder
}

enum FormType {
  DATE
  DROPDOWN
  LINEAR_SCALE
  LONG
  MULTIPLE_CHOICE
  SHORT
  SINGLE_CHOICE
}

input FormUncheckedCreateInput {
  createdAt: DateTime
  favorite: Boolean
  id: String
  items: FormItemUncheckedCreateNestedManyWithoutFormInput
  name: String!
  order: Int
  ownerId: String!
  style: Json
  updatedAt: DateTime
}

input FormUncheckedCreateWithoutItemsInput {
  createdAt: DateTime
  favorite: Boolean
  id: String
  name: String!
  order: Int
  ownerId: String!
  style: Json
  updatedAt: DateTime
}

input FormUncheckedUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  favorite: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  items: FormItemUncheckedUpdateManyWithoutFormNestedInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  ownerId: StringFieldUpdateOperationsInput
  style: Json
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FormUncheckedUpdateManyInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  favorite: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  ownerId: StringFieldUpdateOperationsInput
  style: Json
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FormUncheckedUpdateWithoutItemsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  favorite: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  ownerId: StringFieldUpdateOperationsInput
  style: Json
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FormUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  favorite: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  items: FormItemUpdateManyWithoutFormNestedInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  ownerId: StringFieldUpdateOperationsInput
  style: Json
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FormUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  favorite: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  ownerId: StringFieldUpdateOperationsInput
  style: Json
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FormUpdateOneRequiredWithoutItemsNestedInput {
  connect: FormWhereUniqueInput
  connectOrCreate: FormCreateOrConnectWithoutItemsInput
  create: FormCreateWithoutItemsInput
  update: FormUpdateToOneWithWhereWithoutItemsInput
  upsert: FormUpsertWithoutItemsInput
}

input FormUpdateToOneWithWhereWithoutItemsInput {
  data: FormUpdateWithoutItemsInput!
  where: FormWhereInput
}

input FormUpdateWithoutItemsInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  favorite: BoolFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  order: IntFieldUpdateOperationsInput
  ownerId: StringFieldUpdateOperationsInput
  style: Json
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input FormUpsertWithoutItemsInput {
  create: FormCreateWithoutItemsInput!
  update: FormUpdateWithoutItemsInput!
  where: FormWhereInput
}

input FormWhereInput {
  AND: [FormWhereInput]
  NOT: [FormWhereInput]
  OR: [FormWhereInput]
  createdAt: DateTimeFilter
  favorite: BoolFilter
  id: StringFilter
  items: FormItemListRelationFilter
  name: StringFilter
  order: IntFilter
  ownerId: StringFilter
  style: JsonNullableFilter
  updatedAt: DateTimeFilter
}

input FormWhereUniqueInput {
  AND: [FormWhereInput]
  NOT: [FormWhereInput]
  OR: [FormWhereInput]
  createdAt: DateTimeFilter
  favorite: BoolFilter
  id: String
  items: FormItemListRelationFilter
  name: StringFilter
  order: IntFilter
  ownerId: StringFilter
  ownerId_name: FormOwnerIdNameCompoundUniqueInput
  style: JsonNullableFilter
  updatedAt: DateTimeFilter
}

input IntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input IntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int]
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar Json @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

enum JsonNullValueFilter {
  AnyNull
  DbNull
  JsonNull
}

input JsonNullableFilter {
  array_contains: Json
  array_ends_with: Json
  array_starts_with: Json
  equals: Json
  gt: Json
  gte: Json
  lt: Json
  lte: Json
  not: Json
  path: [String]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input JsonNullableWithAggregatesFilter {
  _count: NestedIntNullableFilter
  _max: NestedJsonNullableFilter
  _min: NestedJsonNullableFilter
  array_contains: Json
  array_ends_with: Json
  array_starts_with: Json
  equals: Json
  gt: Json
  gte: Json
  lt: Json
  lte: Json
  not: Json
  path: [String]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

type Mutation {
  createOneForm(data: FormCreateInput!): Form!
  createOneFormItem(data: FormItemCreateInput!): FormItem!
  deleteOneForm(where: FormWhereUniqueInput!): Form
  deleteOneFormItem(where: FormItemWhereUniqueInput!): FormItem
  updateOneForm(data: FormUpdateInput!, where: FormWhereUniqueInput!): Form!
  updateOneFormItem(data: FormItemUpdateInput!, where: FormItemWhereUniqueInput!): FormItem!
  uploadItemImage(base64: String!, formId: String!, itemId: String!): UploadResponse
  uploaderHeaderImage(base64: String!, formId: String!): UploadResponse
}

input NestedBoolFilter {
  equals: Boolean
  not: NestedBoolFilter
}

input NestedBoolWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedBoolFilter
  _min: NestedBoolFilter
  equals: Boolean
  not: NestedBoolWithAggregatesFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input NestedDateTimeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedDateTimeFilter
  _min: NestedDateTimeFilter
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeWithAggregatesFilter
  notIn: [DateTime]
}

input NestedEnumFormTypeFilter {
  equals: FormType
  in: [FormType]
  not: NestedEnumFormTypeFilter
  notIn: [FormType]
}

input NestedEnumFormTypeWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedEnumFormTypeFilter
  _min: NestedEnumFormTypeFilter
  equals: FormType
  in: [FormType]
  not: NestedEnumFormTypeWithAggregatesFilter
  notIn: [FormType]
}

input NestedFloatFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatFilter
  notIn: [Float]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int]
}

input NestedIntWithAggregatesFilter {
  _avg: NestedFloatFilter
  _count: NestedIntFilter
  _max: NestedIntFilter
  _min: NestedIntFilter
  _sum: NestedIntFilter
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntWithAggregatesFilter
  notIn: [Int]
}

input NestedJsonNullableFilter {
  array_contains: Json
  array_ends_with: Json
  array_starts_with: Json
  equals: Json
  gt: Json
  gte: Json
  lt: Json
  lte: Json
  not: Json
  path: [String]
  string_contains: String
  string_ends_with: String
  string_starts_with: String
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input NestedStringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

enum NullableJsonNullValueInput {
  DbNull
  JsonNull
}

enum NullsOrder {
  first
  last
}

type Query {
  findFirstForm(cursor: FormWhereUniqueInput, distinct: [FormScalarFieldEnum], orderBy: [FormOrderByWithRelationInput], skip: Int, take: Int, where: FormWhereInput): Form
  findManyForm(cursor: FormWhereUniqueInput, distinct: [FormScalarFieldEnum], orderBy: [FormOrderByWithRelationInput], skip: Int, take: Int, where: FormWhereInput): [Form!]!
  findManyFormCount(cursor: FormWhereUniqueInput, distinct: [FormScalarFieldEnum], orderBy: [FormOrderByWithRelationInput], skip: Int, take: Int, where: FormWhereInput): Int!
  findManyFormItem(cursor: FormItemWhereUniqueInput, distinct: [FormItemScalarFieldEnum], orderBy: [FormItemOrderByWithRelationInput], skip: Int, take: Int, where: FormItemWhereInput): [FormItem!]!
  findManyFormItemCount(cursor: FormItemWhereUniqueInput, distinct: [FormItemScalarFieldEnum], orderBy: [FormItemOrderByWithRelationInput], skip: Int, take: Int, where: FormItemWhereInput): Int!
}

enum QueryMode {
  default
  insensitive
}

enum SortOrder {
  asc
  desc
}

input SortOrderInput {
  nulls: NullsOrder
  sort: SortOrder!
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input StringWithAggregatesFilter {
  _count: NestedIntFilter
  _max: NestedStringFilter
  _min: NestedStringFilter
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringWithAggregatesFilter
  notIn: [String]
  startsWith: String
}

enum TransactionIsolationLevel {
  ReadCommitted
  ReadUncommitted
  RepeatableRead
  Serializable
}

type UploadResponse {
  """Error mesage, or uploaded file url"""
  message: String

  """Success flag"""
  success: Boolean
}
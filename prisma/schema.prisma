generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Form {
  id        String     @id @default(uuid())
  name      String
  ownerId   String
  order     Int        @default(autoincrement())
  style     Json?
  favorite  Boolean    @default(false)
  folderId  String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now()) @updatedAt
  items     FormItem[]
  Folder    Folder?    @relation(fields: [folderId], references: [id], onDelete: SetNull)

  @@unique([ownerId, name])
  @@index([ownerId, name])
}

model FormItem {
  id       String   @id @default(uuid())
  name     String
  order    Int      @default(autoincrement())
  section  Int      @default(0)
  formId   String
  required Boolean  @default(false)
  items    Json?
  image    Json?
  type     FormType
  Form     Form     @relation(fields: [formId], references: [id], onDelete: Cascade)
  Answers  Answer[]
}

model Answer {
  id         String    @id @default(uuid())
  value      String?
  formItemId String?
  FormItem   FormItem? @relation(fields: [formItemId], references: [id])
}

model Folder {
  id      String @id @default(uuid())
  name    String
  ownerId String
  Forms   Form[]

  @@unique([ownerId, name])
  @@index([ownerId, name])
}

enum FormType {
  SHORT
  LONG
  SINGLE_CHOICE
  MULTIPLE_CHOICE
  DROPDOWN
  LINEAR_SCALE
  DATE
}
